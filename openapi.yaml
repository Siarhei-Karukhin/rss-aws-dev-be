openapi: 3.0.3
info:
  title: Swagger (Task 3 / Product service) - OpenAPI 3.0
  description: Task 3 (First API with AWS API Gateway and AWS Lambda)
  termsOfService: http://swagger.io/terms/
  contact:
    email: apiteam@swagger.io
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.11
externalDocs:
  description: Find out more about Swagger
  url: http://swagger.io
servers:
  - url: https://5ua826jntg.execute-api.us-west-2.amazonaws.com/prod
tags:
  - name: product
    description: Everything about your Product
    externalDocs:
      description: Find out more
      url: http://swagger.io
paths:
  /products:
    get:
      tags:
        - product
      summary: Add a new product to the store
      description: Add a new product to the store
      operationId: addProduct
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'          
            application/xml:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'
        '500':
          description: Something went wrong
  /products/{productId}:
    get:
      tags:
        - product
      summary: Find product by ID
      description: Returns a single product
      operationId: getProductById
      parameters:
        - name: productId
          in: path
          description: ID of product to return
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'          
            application/xml:
              schema:
                $ref: '#/components/schemas/Product'
        '404':
          description: Not found
        '500':
          description: Something went wrong
components:
  schemas:
    Product:
      required:
        - id
        - title
        - description
        - price
      type: object
      properties:
        id:
          type: string
          example: '1'
        title:
          type: string
          example: '#1'
        description:
          type: string
          example: '1st item'
        price:
          type: integer
          format: int64
          example: 100
      xml:
        name: product